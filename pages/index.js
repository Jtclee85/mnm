import { useState, useRef, useEffect } from 'react';
import ReactMarkdown from 'react-markdown';
import Head from 'next/head';

// Ï§ÑÎ∞îÍøà Îì± Î∂àÌïÑÏöîÌïú Í≥µÎ∞± Ï†úÍ±∞ Ìï®Ïàò
const cleanContent = (text) => {
  return text.replace(/\n{3,}/g, '\n\n').replace(/^\s+|\s+$/g, '');
};

export default function Home() {
  const [messages, setMessages] = useState([
    { role: 'assistant', content: 'ÏïàÎÖïÌïòÏÑ∏Ïöî. Ïó≠ÏÇ¨Ï†Å Ïù∏Î¨º, ÏÇ¨Í±¥, Ïú†Ï†ÅÏùÑ ÏâΩÍ≤å ÌíÄÏñ¥ ÏÑ§Î™ÖÌï¥Ï£ºÎäî [Î≠êÎÉêÎ©¥]ÏûÖÎãàÎã§. Ï°∞ÏÇ¨Ìïú ÏûêÎ£åÎ•º Î∂ôÏó¨ÎÑ£Í∏∞ Ìï¥Ï£ºÏãúÎ©¥ ÏπúÏ†àÌïòÍ≥† ÏâΩÍ≤å ÏÑ§Î™ÖÌï¥ÎìúÎ¶¥Í≤åÏöî.' }
  ]);
  const [input, setInput] = useState('');
  const bottom = useRef();
  const [loadingMessageIndex, setLoadingMessageIndex] = useState(0);
  const [loadingInterval, setLoadingInterval] = useState(null);
  const [typedText, setTypedText] = useState('');
  const loadingMessages = ['Í∑∏Í≤å Î≠êÎÉêÎ©¥...', 'ÏÉùÍ∞ÅÏ§ëÏù¥Îãà Ïû†ÍπêÎßåÏöî...'];

  useEffect(() => {
    bottom.current?.scrollIntoView({ behavior: 'smooth' });
  }, [messages, typedText]);

  // ÌÉÄÏûê Ìö®Í≥º
  const typeEffect = (text) => {
    let i = 0;
    const speed = 50;
    const type = () => {
      if (i <= text.length) {
        setTypedText(text.slice(0, i));
        i++;
        setTimeout(type, speed);
      }
    };
    type();
  };

  // TTS
  const speakText = (text) => {
    window.speechSynthesis.cancel(); // Ï§ëÎ≥µ Î∞©ÏßÄ
    const voices = window.speechSynthesis.getVoices();
    const childlikeVoice = voices.find(voice =>
      voice.lang === 'ko-KR' && (voice.name.includes('Google') || voice.name.includes('Microsoft'))
    );
    const utterance = new SpeechSynthesisUtterance(text);
    utterance.lang = 'ko-KR';
    utterance.pitch = 1.0;
    utterance.rate = 1.1;
    if (childlikeVoice) utterance.voice = childlikeVoice;
    window.speechSynthesis.speak(utterance);
  };

  // ÏãúÏä§ÌÖú Ïó≠Ìï† ÌîÑÎ°¨ÌîÑÌä∏ (Ï±óÎ¥á Ï†ïÏ≤¥ÏÑ±)
  const systemMsg = {
    role: 'system',
    content: `
ÎãπÏã†ÏùÄ 'Î≠êÎÉêÎ©¥'Ïù¥ÎùºÎäî Ïù¥Î¶ÑÏùò AI Ï±óÎ¥áÏûÖÎãàÎã§.
Ïó≠ÏÇ¨Ïóê ÎåÄÌï¥ Ïûò Î™®Î•¥Îäî Ï¥àÎì±ÌïôÏÉùÏùÑ ÏúÑÌï¥ Î≥µÏû°Ìïú Í∞úÎÖê, Ïú†Ï†Å, ÏÇ¨Í±¥ÏùÑ ÏâΩÍ≥† Î™ÖÌôïÌïòÍ≤å ÏÑ§Î™ÖÌïòÎäî Ïó≠Ìï†ÏùÑ Ìï©ÎãàÎã§.

Îã§Ïùå Ï°∞Í±¥ÏùÑ Î∞òÎìúÏãú ÏßÄÏºúÏïº Ìï©ÎãàÎã§:
- ÏÑ§Î™ÖÏùÄ Ï¥àÎì±ÌïôÏÉùÏù¥ Ïù¥Ìï¥Ìï† Ïàò ÏûàÎèÑÎ°ù ÏâΩÍ≥† Íµ¨Ï≤¥Ï†ÅÏúºÎ°ú Ìï©ÎãàÎã§.
- ÌïôÏÉùÎì§Ïù¥ ÏïåÍ∏∞ ÏâΩÍ≤å Ïó≠ÏÇ¨Ï†Å Ïö©Ïñ¥Ïóê ÎÇòÏò§Îäî ÌïúÏûêÏñ¥Î•º ÏâΩÍ≤å ÌíÄÏù¥Ìï¥ÏÑú ÏïåÎ†§Ï§çÎãàÎã§.
- ÎÑàÎ¨¥ ÎßéÏùÄ Ï†ïÎ≥¥Î•º Ìïú Î≤àÏóê Ï†úÍ≥µÌïòÏßÄ ÏïäÍ≥†, ÌïµÏã¨ Ï§ëÏã¨ÏúºÎ°ú Í∞ÑÍ≤∞ÌïòÍ≤å ÎßêÌï©ÎãàÎã§.
- Ï£ºÏ†úÏôÄ Ï§ëÏã¨ ÎÇ¥Ïö©Ïóê Îî∞Îùº Îã®ÎùΩÏùÑ ÎÇòÎàÑÏñ¥ÏÑú ÏÑ§Î™ÖÌï©ÎãàÎã§.
- ÏßàÎ¨∏Í≥º Í¥ÄÎ†® ÏóÜÎäî ÎÇ¥Ïö©ÏùÄ ÎãµÌïòÏßÄ ÏïäÏúºÎ©∞, Ïó≠ÏÇ¨ Ïô∏ Î∂ÑÏïºÏùò ÏßàÎ¨∏ÏùÄ ‚ÄúÎÇòÎäî Ïó≠ÏÇ¨Ïóê ÎåÄÌï¥ÏÑúÎßå ÎèÑÏôÄÏ§Ñ Ïàò ÏûàÏñ¥.‚ÄùÎùºÍ≥† ÎåÄÎãµÌï©ÎãàÎã§.
- ÏπúÏ†àÌïòÍ≥† Î∂ÄÎìúÎü¨Ïö¥ ÎßêÌà¨Î•º ÏÇ¨Ïö©Ìï©ÎãàÎã§.
- Î∂àÌôïÏã§ÌïòÍ±∞ÎÇò Î™®Î•¥Îäî Ï†ïÎ≥¥Îäî Ï∂îÏ∏°ÌïòÏßÄ ÎßêÍ≥† 'Ïûò Î™®Î•¥Í≤†ÏäµÎãàÎã§. Í¥ÄÎ†® ÏûêÎ£åÎ•º ÏßÅÏ†ë Í≤ÄÏÉâÌï¥ÏÑú Ï∞æÏïÑÎ≥¥ÏÑ∏Ïöî' ÎùºÍ≥† ÎãµÌï¥Ï§çÎãàÎã§.
- Í≥µÏãù Î¨∏ÏÑú, ÎÖºÎ¨∏, Îâ¥Ïä§ Îì± Ï∂úÏ≤òÍ∞Ä Î™ÖÌôïÌïú Ï†ïÎ≥¥Îßå Ï†úÍ≥µÌï©ÎãàÎã§.
- Ï∞ΩÏûëÎêú ÎÇ¥Ïö©Ïù¥ÎÇò Í∑ºÍ±∞ ÏóÜÎäî Ï†ïÎ≥¥Îäî Ï†àÎåÄ Ìè¨Ìï®ÌïòÏßÄ ÏïäÏäµÎãàÎã§.
- Ï¥àÎì±ÌïôÏÉùÏóêÍ≤å ÎÇØÏÑ† Ïö©Ïñ¥ÎÇò Í∞úÎÖêÏùÄ Î®ºÏ†Ä Í∞ÑÎã®ÌïòÍ≤å Ï†ïÏùòÌï¥Ï§Ä ÌõÑ ÏÑ§Î™ÖÌï©ÎãàÎã§.
- Îã®Í≥ÑÏ†ÅÏúºÎ°ú Î∂ÑÏ†àÌïòÏó¨ ÎÖºÎ¶¨Ï†ÅÏúºÎ°ú ÏÑ§Î™ÖÌï©ÎãàÎã§.
- Ïù¥Ìï¥ÌïòÍ∏∞ ÏâΩÍ≤å Îã®Ïñ¥Î•º Î∞îÍæ∏Í≥†, Ïñ¥Î†§Ïö¥ Í∞úÎÖêÏóê ÎåÄÌï¥ÏÑúÎäî Î∂ÄÏó∞ÏÑ§Î™ÖÌïòÎäî ÎÇ¥Ïö©ÏùÑ ÎÑ£Ïñ¥ÏÑú ÏÑ§Î™ÖÌï©ÎãàÎã§.
- Ìï¥Îãπ Íµ≠Í∞ÄÏú†ÏÇ∞Ïóê ÎåÄÌï¥ ÌïôÏÉùÏù¥ ÏßàÎ¨∏ÌïòÏßÄ ÏïäÏùÄ Îã§Î•∏ Ï†ïÎ≥¥ÎèÑ Ïõπ Í≤ÄÏÉâÏùÑ ÌÜµÌï¥ ÎçîÌï¥ÏÑú ÏÑ§Î™ÖÌï¥ Ï§çÎãàÎã§.
- ÌïôÏÉùÏù¥ ÏûÖÎ†•Ìïú Î¨∏ÌôîÏú†ÏÇ∞Ïóê ÎåÄÌï¥ ÏõπÌéòÏù¥ÏßÄÏóêÏÑú Ï∂îÍ∞ÄÏ†ÅÏù∏ ÏûêÎ£åÎ•º Ï∞æÏïÑ ÎçßÎ∂ôÏó¨ ÏÜåÍ∞úÌïúÎã§.
- Ï°∞ÏÇ¨Ìïú ÎÇ¥Ïö©ÏùÑ Î∞úÌëúÏûêÎ£åÎ°ú ÎßåÎì§ Ïàò ÏûàÎèÑÎ°ù ÏöîÏïΩÎ≥∏ÏùÑ Ï†úÍ≥µÌï† ÏßÄ Î¨ºÏñ¥Î≥∏Îã§.
- ÎåÄÌôîÏùò ÎÅù Î∂ÄÎ∂ÑÏóê 'Îçî Í∂ÅÍ∏àÌïú Í≤å ÏûàÎãà? ÏïÑÎãàÎ©¥ Ïù¥Ï†ú Í∑∏ÎßåÌï†Íπå?'Î•º Î¨ºÏñ¥Î≥∏Îã§.

‚Äª ÌäπÎ≥Ñ Í∏∞Îä• - ÌïôÏäµ ÌèâÍ∞Ä Î∞è Î≥¥Í≥†ÏÑú ÏÉùÏÑ±:
ÌïôÏÉùÏù¥ 'Í∑∏ÎßåÌï†Í≤åÏöî', 'Ïù¥Ï†ú ÎÅù', 'Í∞êÏÇ¨Ìï©ÎãàÎã§' Îì± ÎåÄÌôîÎ•º Ï¢ÖÎ£åÌïòÎäî ÌëúÌòÑÏùÑ ÏÇ¨Ïö©ÌïòÎ©¥, ÏßÄÍ∏àÍπåÏßÄÏùò ÎåÄÌôîÎ•º Î∞îÌÉïÏúºÎ°ú Îã§Ïùå Í∏∞Ï§ÄÏóê Îî∞Îùº ÌèâÍ∞ÄÌïòÍ≥† Î≥¥Í≥†ÏÑúÎ•º ÏûëÏÑ±Ìï©ÎãàÎã§.

1. ÌèâÍ∞Ä (ÏÑ∏ Îã®Í≥Ñ Ï§ë ÌïòÎÇòÎßå ÏÑ†ÌÉù, ÏïÑÎûò Í∏∞Ï§ÄÏùÑ ÏóÑÍ≤©ÌïòÍ≤å Ï†ÅÏö©):
- ÏûòÌï®: Ï°∞ÏÇ¨ ÎåÄÏÉÅÏùò Ïó≠ÏÇ¨Ï†Å Î∞∞Í≤ΩÏù¥ÎÇò Í∞ÄÏπòÏóê ÎåÄÌï¥ Ïä§Ïä§Î°ú ÏßàÎ¨∏ÌïòÍ±∞ÎÇò, Í¥ÄÎ†® ÏÇ¨Í±¥Í≥ºÏùò Ïó∞Í≤∞ÏÑ±ÏùÑ Î¨ªÎäî Îì± ÌÉêÍµ¨Ï†Å ÏßàÎ¨∏Ïù¥ 3Í∞ú Ïù¥ÏÉÅ ÏûàÎäî Í≤ΩÏö∞ÏóêÎßå Ìï¥Îãπ.
- Î≥¥ÌÜµ: ÏßàÎ¨∏Ïù¥ Ï£ºÎ°ú Îã®Ïñ¥Ïùò Îúª, Í±¥Î¨º Íµ¨Ï°∞, Ïó∞ÎèÑ Îì± Í∏∞Î≥∏ Ï†ïÎ≥¥ ÌôïÏù∏Ïóê Î®∏Î¨¥Î•∏ Í≤ΩÏö∞. ÌÉêÍµ¨Ï†Å ÏßàÎ¨∏Ïù¥ ÏóÜÍ±∞ÎÇò 1~2Í∞ú Ïù¥Ìïò.
- ÎÖ∏Î†• ÏöîÌï®: ÏßàÎ¨∏Ïù¥ Í±∞Ïùò ÏóÜÍ±∞ÎÇò, Îã®ÏàúÌïú Í∞êÌÉÑÏù¥ÎÇò ÌôïÏù∏Îßå ÏûàÎäî Í≤ΩÏö∞. Î™®Ìò∏Ìïú Í≤ΩÏö∞ÏóêÎèÑ Ïù¥ Î≤îÏ£ºÎ°ú ÌåêÎã®.

2. Î≥¥Í≥†ÏÑú ÏûëÏÑ± (Í∞ÑÍ≤∞Ìïú Í∞úÏ°∞Ïãù, ÏµúÎåÄ 6Ï§Ñ ÎÇ¥Ïô∏):
- Ï°∞ÏÇ¨ ÎåÄÏÉÅÏùò Í∏∞Î≥∏ Ï†ïÎ≥¥
- Ïó≠ÏÇ¨Ï†Å Î∞∞Í≤Ω Î∞è Í∞ÄÏπò
- ÏßàÎ¨∏ ÎÇ¥Ïö©ÏùÑ ÌÜµÌïú ÌïôÏÉùÏùò Ïù¥Ìï¥ÎèÑ ÏöîÏïΩ
- ÌäπÎ≥ÑÌûà Ìù•ÎØ∏Î•º Î≥¥Ïù∏ Î∂ÄÎ∂ÑÏù¥ÎÇò Ïù∏ÏÉÅ ÍπäÏùÄ ÎåÄÌôî ÏöîÏÜå
- Ï¢ÖÌï©Ï†Å ÌèâÏñ¥ Î∞è Í≤©Î†§ Î©òÌä∏
    `
      
‚Äª ÌäπÎ≥Ñ Í∏∞Îä• 2 - ÌïôÏäµ ÌÄ¥Ï¶à ÏÉùÏÑ±:
ÏÇ¨Ïö©ÏûêÍ∞Ä "ÌÄ¥Ï¶àÎ•º ÎßåÎì§Ïñ¥ Ï§ò" ÎòêÎäî Ïù¥ÏôÄ Ïú†ÏÇ¨Ìïú ÏöîÏ≤≠ÏùÑ ÌïòÎ©¥, ÏßÄÍ∏àÍπåÏßÄ ÎåÄÌôîÌïú ÎÇ¥Ïö©ÏùÑ Î∞îÌÉïÏúºÎ°ú Îã§Ïùå Í∑úÏπôÏóê Îî∞Îùº ÌÄ¥Ï¶àÎ•º ÏÉùÏÑ±Ìï©ÎãàÎã§.

1. ÌÄ¥Ï¶à ÌòïÏãù: Í∞ùÍ¥ÄÏãù ÌÄ¥Ï¶à 3Î¨∏Ï†úÎ•º Ï∂úÏ†úÌï©ÎãàÎã§. Í∞Å Î¨∏Ï†úÏóêÎäî 4Í∞úÏùò Î≥¥Í∏∞(‚ë†, ‚ë°, ‚ë¢, ‚ë£)Î•º Ï†úÏãúÌï¥Ïïº Ìï©ÎãàÎã§.
2. ÎÇúÏù¥ÎèÑ Ï°∞Ï†à: ÎåÄÌôî ÎÇ¥Ïö©ÏóêÏÑú ÌïµÏã¨Ï†ÅÏù¥Í≥† Ï§ëÏöîÌïú Í∞úÎÖêÏùÑ Ï§ëÏã¨ÏúºÎ°ú Î¨∏Ï†úÎ•º Ï∂úÏ†úÌïòÎêò, ÎÑàÎ¨¥ ÏßÄÏóΩÏ†ÅÏù¥Í±∞ÎÇò Ïñ¥Î†§Ïö¥ ÎÇ¥Ïö©ÏùÄ ÌîºÌï©ÎãàÎã§.
3. ÌÄ¥Ï¶à ÎÇ¥Ïö©:
    - Ï≤´ Î≤àÏß∏ Î¨∏Ï†úÎäî ÎåÄÌôîÏùò ÌïµÏã¨ Ï£ºÏ†úÏóê ÎåÄÌïú Ïù¥Ìï¥ÎèÑÎ•º Î¨ªÎäî ÏßàÎ¨∏ÏúºÎ°ú Íµ¨ÏÑ±Ìï©ÎãàÎã§.
    - Îëê Î≤àÏß∏ Î¨∏Ï†úÎäî ÏÑ∏Î∂Ä Ï†ïÎ≥¥ÎÇò ÏÇ¨Ïã§ÏùÑ Ï†ïÌôïÌûà Í∏∞ÏñµÌïòÎäîÏßÄ Î¨ªÎäî ÏßàÎ¨∏ÏúºÎ°ú Íµ¨ÏÑ±Ìï©ÎãàÎã§.
    - ÏÑ∏ Î≤àÏß∏ Î¨∏Ï†úÎäî ÎåÄÌôî ÎÇ¥Ïö©ÏùÑ Î∞îÌÉïÏúºÎ°ú Ï∂îÎ°†ÌïòÍ±∞ÎÇò ÏùëÏö©Ìï¥Ïïº ÌïòÎäî ÏßàÎ¨∏ÏùÑ Ìè¨Ìï®ÌïòÏó¨ ÏÇ¨Í≥†Î†•ÏùÑ ÏûêÍ∑πÌï©ÎãàÎã§.
4. Ï†ïÎãµ Î∞è Ìï¥ÏÑ§: Î™®Îì† Î¨∏Ï†úÎ•º Ï†úÏãúÌïú ÌõÑ, Î™ÖÌôïÌïòÍ≤å Íµ¨Î∂ÑÎêú ÏÑπÏÖòÏóê [Ï†ïÎãµ Î∞è Ìï¥ÏÑ§]Ïù¥ÎùºÎäî Ï†úÎ™©ÏùÑ Î∂ôÏó¨ Í∞Å Î¨∏Ï†úÏùò Ï†ïÎãµÍ≥º ÏπúÏ†àÌïú Ìï¥ÏÑ§ÏùÑ Ìï®Íªò Ï†úÍ≥µÌï©ÎãàÎã§. Ìï¥ÏÑ§ÏùÄ Ïôú Í∑∏Í≤ÉÏù¥ Ï†ïÎãµÏù∏ÏßÄ, Îã§Î•∏ Î≥¥Í∏∞Îäî Ïôú ÌãÄÎ†∏ÎäîÏßÄÎ•º Í∞ÑÎûµÌïòÍ≤å ÏÑ§Î™ÖÌï¥ Ï§çÎãàÎã§.
5. Í≤©Î†§ Î©îÏãúÏßÄ: ÌÄ¥Ï¶àÍ∞Ä ÎÅùÎÇú ÌõÑ, "ÌÄ¥Ï¶àÎ•º Ìë∏ÎäêÎùº ÏàòÍ≥†ÌñàÏñ¥Ïöî! Ï∞∏ ÏûòÌñàÏñ¥Ïöî." ÏôÄ Í∞ôÏùÄ Í∏çÏ†ïÏ†ÅÏù∏ Í≤©Î†§ Î©îÏãúÏßÄÎ•º ÎçßÎ∂ôÏó¨ Ï§çÎãàÎã§.
    `
    
  };
  
  // ‚ú® [ÏàòÏ†ïÎê®] Î©îÏãúÏßÄ Ï†ÑÏÜ° Ìï®Ïàò (ÎÇ¥Î∂Ä Ìò∏Ï∂ú Í∞ÄÎä•ÌïòÎèÑÎ°ù ÏàòÏ†ï)
  const sendMessage = async (content) => {
    const messageContent = content || input;
    if (!messageContent) return;

    const newMsg = { role: 'user', content: messageContent };
    const updated = [systemMsg, ...messages, newMsg];

    // ÏÇ¨Ïö©ÏûêÍ∞Ä ÏûÖÎ†•Ìïú ÎÇ¥Ïö©Îßå ÌôîÎ©¥Ïóê Ï¶âÏãú Î∞òÏòÅ
    if(!content) {
      setMessages(prev => [...prev, newMsg]);
      setInput('');
    }
    
    // Î°úÎî© Ïï†ÎãàÎ©îÏù¥ÏÖò ÏãúÏûë
    const initialText = loadingMessages[loadingMessageIndex % loadingMessages.length];
    setLoadingMessageIndex(prev => prev + 1);
    setTypedText('');
    setMessages(prev => [...prev, { role: 'assistant', content: '' }]);
    typeEffect(initialText);

    const interval = setInterval(() => {
      setLoadingMessageIndex(prev => {
        const nextIndex = (prev + 1) % loadingMessages.length;
        typeEffect(loadingMessages[nextIndex]);
        return nextIndex;
      });
    }, 1000);
    setLoadingInterval(interval);

    const res = await fetch('/api/chat', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ messages: updated })
    });
    const data = await res.json();

    clearInterval(interval);
    setMessages(prevMessages => [
      ...prevMessages.slice(0, -1),
      { role: 'assistant', content: data.text }
    ]);
    setTypedText('');
  };
  
  // ‚ú® [Ï∂îÍ∞ÄÎê®] ÌÄ¥Ï¶à ÏöîÏ≤≠ Ìï®Ïàò
  const handleRequestQuiz = () => {
    const quizPrompt = "ÏßÄÍ∏àÍπåÏßÄ ÎåÄÌôîÌïú ÎÇ¥Ïö©ÏùÑ Î∞îÌÉïÏúºÎ°ú, Í∞ùÍ¥ÄÏãù ÌÄ¥Ï¶à 3Í∞úÎ•º ÎßåÎì§Ïñ¥ Ï§ò.";
    // ÌôîÎ©¥Ïóê ÌëúÏãúÌïòÏßÄ ÏïäÍ≥† Î∞îÎ°ú sendMessage Ìï®ÏàòÏóê Î™ÖÎ†πÏñ¥Î•º Ï†ÑÎã¨
    const currentMessages = [...messages, { role: 'user', content: quizPrompt }];
    sendMessage(quizPrompt);
  };

  const renderedMessages = messages.map((m, i) => {
    const isLast = i === messages.length - 1;
    const isTyping = isLast && m.role === 'assistant' && m.content === '';
    const content = isTyping ? typedText : m.content;

    const messageBoxStyle = {
      backgroundColor: m.role === 'user' ? '#e6f3ff' : '#f7f7f8',
      padding: '10px 15px',
      borderRadius: '15px',
      maxWidth: '80%',
      alignSelf: m.role === 'user' ? 'flex-end' : 'flex-start',
      whiteSpace: 'pre-wrap',
      fontSize: '1rem',
      lineHeight: '1.6',
      boxShadow: '0 1px 3px rgba(0,0,0,0.08)'
    };

    return (
      <div key={i} style={{ display: 'flex', flexDirection: 'column', alignItems: messageBoxStyle.alignSelf }}>
        <div style={messageBoxStyle}>
          {m.role === 'assistant' && !isTyping ? (
            <>
              <ReactMarkdown>{cleanContent(content)}</ReactMarkdown>
              <button
                onClick={() => speakText(content)}
                style={{
                  marginTop: 5,
                  fontSize: '1rem',
                  padding: '6px 14px',
                  borderRadius: '4px',
                  background: '#fffbe8',
                  border: '1px solid #fdd835',
                  color: '#333',
                  fontFamily: 'Segoe UI, sans-serif',
                  fontWeight: 'bold',
                  cursor: 'pointer'
                }}
              >üîä ÏùΩÏñ¥Ï£ºÍ∏∞</button>
            </>
          ) : (
            <p style={{ fontStyle: isTyping ? 'italic' : 'normal', minHeight: '1.5em' }}>{content}</p>
          )}
        </div>
      </div>
    );
  });

  return (
    <>
      <Head>
        <title>Î≠êÎÉêÎ©¥ - Ï¥àÎì± Ïó≠ÏÇ¨ Ïú†Ï†Å¬∑ÏÇ¨Í±¥ ÏûêÎ£åÎ•º ÏâΩÍ≤å ÌíÄÏñ¥Ï£ºÎäî AI Ï±óÎ¥á</title>
        <meta name="description" content="Ï¥àÎì±ÌïôÏÉùÏùÑ ÏúÑÌïú Ïó≠ÏÇ¨¬∑Ïú†Ï†Å¬∑ÏÇ¨Í±¥ÏùÑ ÏπúÏ†àÌïòÍ≤å ÏâΩÍ≤å ÏÑ§Î™ÖÌï¥Ï£ºÎäî AI Ï±óÎ¥á, Î≠êÎÉêÎ©¥!" />
        {/* ÎØ∏Î¶¨Î≥¥Í∏∞(OG, Twitter) */}
        <meta property="og:title" content="Î≠êÎÉêÎ©¥ - Ï¥àÎì± Ïó≠ÏÇ¨ Ïú†Ï†Å¬∑ÏÇ¨Í±¥ ÏûêÎ£åÎ•º ÏâΩÍ≤å ÌíÄÏñ¥Ï£ºÎäî AI Ï±óÎ¥á" />
        <meta property="og:description" content="Ï¥àÎì±ÌïôÏÉùÏùÑ ÏúÑÌïú Ïó≠ÏÇ¨¬∑Ïú†Ï†Å¬∑ÏÇ¨Í±¥ÏùÑ ÏπúÏ†àÌïòÍ≤å ÏâΩÍ≤å ÏÑ§Î™ÖÌï¥Ï£ºÎäî AI Ï±óÎ¥á, Î≠êÎÉêÎ©¥!" />
        <meta property="og:image" content="https://mnm-kappa.vercel.app/preview.png" />
        <meta property="og:url" content="https://mnm-kappa.vercel.app" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:title" content="Î≠êÎÉêÎ©¥ - Ï¥àÎì± Ïó≠ÏÇ¨ Ïú†Ï†Å¬∑ÏÇ¨Í±¥ ÏûêÎ£åÎ•º ÏâΩÍ≤å ÌíÄÏñ¥Ï£ºÎäî AI Ï±óÎ¥á" />
        <meta name="twitter:description" content="Ï¥àÎì±ÌïôÏÉùÏùÑ ÏúÑÌïú Ïó≠ÏÇ¨¬∑Ïú†Ï†Å¬∑ÏÇ¨Í±¥ÏùÑ ÏπúÏ†àÌïòÍ≤å ÏâΩÍ≤å ÏÑ§Î™ÖÌï¥Ï£ºÎäî AI Ï±óÎ¥á, Î≠êÎÉêÎ©¥!" />
        <meta name="twitter:image" content="https://mnm-kappa.vercel.app/preview.png" />
      </Head>

      <div style={{ maxWidth: 700, margin: '2rem auto', padding: 20, fontFamily: 'Segoe UI, sans-serif' }}>
        <div style={{ textAlign: 'center', marginBottom: '1.5rem' }}>
          <h1 style={{ fontSize: '2rem', margin: 0, fontWeight: 'bold' }}>Î≠êÎÉêÎ©¥</h1>
          <p style={{ fontSize: '1rem', color: '#666', margin: 0 }}>
            Ï¥àÎì± Ïó≠ÏÇ¨ Ïú†Ï†Å¬∑ÏÇ¨Í±¥¬∑Ïù∏Î¨º ÏûêÎ£åÎ•º ÏâΩÍ≤å ÌíÄÏñ¥Ï£ºÎäî AI Ï±óÎ¥á
          </p>
        </div>
        <div style={{
          display: 'flex', flexDirection: 'column', gap: '10px',
          border: '1px solid #ccc', padding: 10, height: '60vh',
          overflowY: 'auto', borderRadius: '8px', backgroundColor: '#fff'
        }}>
          {renderedMessages}
          <div ref={bottom} />
        </div>
        <div style={{ display: 'flex', flexDirection: 'column', marginTop: 10 }}>
          <textarea
            style={{
              padding: 10,
              minHeight: '60px',
              maxHeight: '200px',
              resize: 'vertical',
              overflowY: 'auto',
              fontSize: '1rem',
              lineHeight: '1.5',
              marginBottom: '0.5rem',
              fontFamily: 'Segoe UI, sans-serif'
            }}
            value={input}
            onChange={e => setInput(e.target.value)}
            onKeyDown={e => {
              if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                sendMessage();
              }
            }}
            placeholder="Î©îÏãúÏßÄÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî... (Shift + EnterÎ°ú Ï§ÑÎ∞îÍøà)"
          />
          { /* ‚ú® [ÏàòÏ†ïÎê®] Î≤ÑÌäºÎì§ÏùÑ Í∞êÏã∏Îäî div Ï∂îÍ∞Ä */ }
          <div style={{ display: 'flex', gap: '10px' }}>
            <button
              onClick={() => sendMessage()}
              style={{
                flex: 1, // ÎÑàÎπÑÎ•º Ï±ÑÏõÄ
                padding: '10px',
                fontSize: '1rem',
                borderRadius: '6px',
                backgroundColor: '#FDD835',
                fontWeight: 'bold',
                color: 'black',
                border: 'none',
                cursor: 'pointer',
                fontFamily: 'Segoe UI, sans-serif'
              }}
            >Î≥¥ÎÇ¥Í∏∞</button>
            { /* ‚ú® [Ï∂îÍ∞ÄÎê®] ÌÄ¥Ï¶à ÌíÄÍ∏∞ Î≤ÑÌäº */ }
            <button
              onClick={handleRequestQuiz}
              disabled={messages.length <= 3} // ÎåÄÌôîÍ∞Ä 3Í∞ú Ïù¥ÌïòÎ©¥ ÎπÑÌôúÏÑ±Ìôî
              style={{
                padding: '10px',
                fontSize: '1rem',
                borderRadius: '6px',
                backgroundColor: messages.length <= 3 ? '#e0e0e0' : '#4CAF50',
                fontWeight: 'bold',
                color: 'white',
                border: 'none',
                cursor: messages.length <= 3 ? 'not-allowed' : 'pointer',
                fontFamily: 'Segoe UI, sans-serif'
              }}
            >ÌÄ¥Ï¶à ÌíÄÍ∏∞</button>
          </div>
        </div>
      </div>
    </>
  );
}
